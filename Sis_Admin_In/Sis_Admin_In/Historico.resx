<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_aceptar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>